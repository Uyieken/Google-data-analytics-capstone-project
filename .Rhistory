# Create new variable with hours instead of minutes
updated_sleep_day <- sleep_day_clean %>%
mutate(
Total_hours_asleep = TotalMinutesAsleep / 60,
Total_hours_in_bed = TotalTimeInBed / 60
)
# Plot calories against total steps
ggplot(
data = daily_activity_clean,
mapping = aes(x = TotalSteps, y = Calories)
) +
geom_point(aes(color = Calories)) +
geom_smooth()
install.packages("gsubfn")
# Load packages
# install.packages("gsubfn")
library(tidyverse)
library(lubridate)
library(gsubfn)
library(ggExtra)
# Load and data
sleep_day <- read.csv("sleepDay_merged.csv")
daily_activity <- read.csv("dailyActivity_merged.csv")
# Drop duplicate and NA rows
sleep_day_clean <- sleep_day[!duplicated(sleep_day), ] %>%
na.omit()
daily_activity_clean <- daily_activity[!duplicated(daily_activity), ] %>%
na.omit()
# Trim sleepDay column in sleep_day dataset
sleep_day_clean$SleepDay <- gsub(
" 12:00:00 AM", "",
as.character(sleep_day_clean$SleepDay)
)
# Create Weekday variable for daily activities and sleep day
daily_activity_clean <- daily_activity_clean %>%
mutate(Weekday = weekdays
(as.Date(ActivityDate, "%m/%d/%Y")))
sleep_day_clean <- sleep_day_clean %>%
mutate(Weekday = weekdays
(as.Date(SleepDay, "%m/%d/%Y")))
# Create new variable with hours instead of minutes
updated_sleep_day <- sleep_day_clean %>%
mutate(
Total_hours_asleep = TotalMinutesAsleep / 60,
Total_hours_in_bed = TotalTimeInBed / 60
)
updated_sleep_day$Total_hours_in_bed <-
round(updated_sleep_day$Total_hours_in_bed, digits = 2)
updated_sleep_day$Total_hours_asleep <-
round(updated_sleep_day$Total_hours_asleep, digits = 2)
# Plot calories against total steps
ggplot(
data = daily_activity_clean,
mapping = aes(x = TotalSteps, y = Calories)
) +
geom_point(aes(color = Calories)) +
geom_smooth()
ggplot(
data = updated_sleep_day,
mapping = aes(
x = Weekday,
y = Total_hours_asleep
)
) +
geom_boxplot() +
facet_wrap(~TotalSleepRecords) +
ggExtra::rotateTextX()
updated_sleep_day %>%
ggplot(aes(Weekday))+
geom_bar()
updated_sleep_day %>%
ggplot(aes(Weekday))+
geom_bar()+
geom_line()
updated_sleep_day %>%
ggplot(aes(Weekday))+
geom_bar()+
geom_smooth()
View(updated_sleep_day)
updated_sleep_day %>%
ggplot(aes(Weekday))+
geom_bar(fill = Total_hours_asleep)
updated_sleep_day %>%
ggplot(aes(Weekday, fill = Total_hours_asleep))+
geom_bar()
View(sleep_day)
hourly_calories <- read.csv("hourlyCalories_merged.csv")
styler:::style_selection()
styler:::set_style_transformers()
hourly_calories_clean <- hourly_calories[!duplicated(hourly_calories), ] %>%
na.omit()
View(hourly_calories_clean)
View(hourly_calories_clean)
hourly_calories_clean %>% count(Id)
glimpse(sleep_day_clean)
glimpse(hourly_calories_clean)
source("C:/Users/HENRY IRABOR/Desktop/csp2/Capstone_project_analysis2.R")
# Load packages
# install.packages("gsubfn")
library(tidyverse)
library(lubridate)
library(lubridate)
library(gsubfn)
library(ggExtra)
# Load and data
sleep_day <- read.csv("sleepDay_merged.csv")
daily_activity <- read.csv("dailyActivity_merged.csv")
daily_calories <- read.csv("dailyCalories_merged.csv")
# Drop duplicate and NA rows
sleep_day_clean <- sleep_day[!duplicated(sleep_day), ] %>%
na.omit()
daily_activity_clean <- daily_activity[!duplicated(daily_activity), ] %>%
na.omit()
daily_calories_clean <- daily_calories[!duplicated(hourly_calories), ] %>%
na.omit()
daily_calories_clean <- daily_calories[!duplicated(daily_calories), ] %>%
na.omit()
daily_calories_clean %>% count(Id)
# Trim sleepDay column in sleep_day dataset
sleep_day_clean$SleepDay <- gsub(
" 12:00:00 AM", "",
as.character(sleep_day_clean$SleepDay)
)
# Create Weekday variable for daily activities and sleep day
daily_activity_clean <- daily_activity_clean %>%
mutate(Weekday = weekdays
(as.Date(ActivityDate, "%m/%d/%Y")))
sleep_day_clean <- sleep_day_clean %>%
mutate(Weekday = weekdays
(as.Date(SleepDay, "%m/%d/%Y")))
View(daily_calories_clean)
daily_calories_clean <- daily_calories_clean %>%
mutate(Weekday = weekdays
(as.Date(ActivityDay, "%m/%d/%Y")))
glimpse(daily_calories_clean)
# Create new variable with hours instead of minutes
updated_sleep_day <- sleep_day_clean %>%
mutate(
Total_hours_asleep = TotalMinutesAsleep / 60,
Total_hours_in_bed = TotalTimeInBed / 60
)
updated_sleep_day$Total_hours_in_bed <-
round(updated_sleep_day$Total_hours_in_bed, digits = 2)
updated_sleep_day$Total_hours_asleep <-
round(updated_sleep_day$Total_hours_asleep, digits = 2)
View(daily_activity_clean)
daily_calories_clean %>%
ggplot(aes(Weekday, Calories, color = Calories))+
geom_point()
daily_calories_clean %>%
ggplot(aes(Weekday, Calories, color = Calories))+
geom_boxplot()
source("C:/Users/HENRY IRABOR/Desktop/csp2/Capstone_project_analysis2.R")
# Load packages
# install.packages("gsubfn")
library(tidyverse)
library(lubridate)
library(gsubfn)
library(ggExtra)
# Load and data
sleep_day <- read.csv("sleepDay_merged.csv")
daily_activity <- read.csv("dailyActivity_merged.csv")
daily_calories <- read.csv("dailyCalories_merged.csv")
# Drop duplicate and NA rows
sleep_day_clean <- sleep_day[!duplicated(sleep_day), ] %>%
na.omit()
daily_activity_clean <- daily_activity[!duplicated(daily_activity), ] %>%
na.omit()
daily_calories_clean <- daily_calories[!duplicated(daily_calories), ] %>%
na.omit()
# Trim sleepDay column in sleep_day dataset
sleep_day_clean$SleepDay <- gsub(
" 12:00:00 AM", "",
as.character(sleep_day_clean$SleepDay)
)
# Create Weekday variable for daily activities and sleep day
daily_activity_clean <- daily_activity_clean %>%
mutate(Weekday = weekdays
(as.Date(ActivityDate, "%m/%d/%Y")))
sleep_day_clean <- sleep_day_clean %>%
mutate(Weekday = weekdays
(as.Date(SleepDay, "%m/%d/%Y")))
daily_calories_clean <- daily_calories_clean %>%
mutate(Weekday = weekdays
(as.Date(ActivityDay, "%m/%d/%Y")))
# Create new variable with hours instead of minutes
updated_sleep_day <- sleep_day_clean %>%
mutate(
Total_hours_asleep = TotalMinutesAsleep / 60,
Total_hours_in_bed = TotalTimeInBed / 60
)
updated_sleep_day$Total_hours_in_bed <-
round(updated_sleep_day$Total_hours_in_bed, digits = 2)
updated_sleep_day$Total_hours_asleep <-
round(updated_sleep_day$Total_hours_asleep, digits = 2)
# Plot calories against total steps
ggplot(
data = daily_activity_clean,
mapping = aes(x = TotalSteps, y = Calories)
) +
geom_point(aes(color = Calories)) +
geom_smooth()
# Plot Total Hours Asleep Against Weekday.
ggplot(
data = updated_sleep_day,
mapping = aes(
x = Weekday,
y = Total_hours_asleep
)
) +
geom_boxplot() +
facet_wrap(~TotalSleepRecords) +
ggExtra::rotateTextX()
updated_sleep_day %>%
ggplot(aes(Weekday, fill = Total_hours_asleep)) +
geom_bar()
daily_calories_clean %>%
ggplot(aes(Weekday, Calories, color = Calories))+
geom_boxplot()
#Rename variables to match
updated_sleep_day %>%
rename(Date = SleepDay)
View(updated_sleep_day)
#Rename variables to match
Sleep_data <- updated_sleep_day %>%
rename(Date = SleepDay)
Daily_activity_data <- daily_activity_clean %>%
rename(Date = ActivityDate)
View(Daily_activity_data)
View(Daily_activity_data)
View(Sleep_data)
# Merge datasets
merged_data <- merge(Daily_activity_data, Sleep_data, by = c("Id", "Date"))
View(merged_data)
styler:::style_active_file()
styler:::style_selection()
merged_data %>%
ggplot(TotalDistance, Total_hours_asleep)+
geom_point(alpha = 0.5)
merged_data %>%
ggplot(aes(TotalDistance, Total_hours_asleep))+
geom_point(alpha = 0.5)
merged_data %>%
ggplot(aes(TotalDistance, Total_hours_asleep))+
geom_point(alpha = 0.5)+
geom_smooth()
merged_data %>%
ggplot(aes(TotalDistance, Total_hours_asleep, fill = TotalSleepRecords))+
geom_point(alpha = 0.5)+
geom_smooth()
merged_data %>%
ggplot(aes(TotalDistance, Total_hours_asleep, color = TotalSleepRecords))+
geom_point(alpha = 0.5)+
geom_smooth()
merged_data %>%
ggplot(aes(TotalDistance, Total_hours_asleep, color = "blue"))+
geom_point(alpha = 0.5)+
geom_smooth()+
facet_wrap(~TotalSleepRecords)
merged_data %>%
ggplot(aes(TotalDistance, Total_hours_asleep, color = "Blue"))+
geom_point(alpha = 0.5)+
geom_smooth()+
facet_wrap(~TotalSleepRecords)
merged_data %>%
ggplot(aes(TotalDistance, Total_hours_asleep, color = "Blue"))+
geom_point()+
geom_smooth()+
facet_wrap(~TotalSleepRecords)
merged_data %>%
ggplot(aes(TotalSteps, Total_hours_in_bed))+
geom_point()
merged_data %>%
ggplot(aes(TotalSteps, Total_hours_in_bed))+
geom_point()+
geom_smooth()
merged_data %>%
ggplot(aes(TotalSteps, Total_hours_in_bed))+
geom_point()+
geom_smooth()+
facet_wrap(~TotalSleepRecords)
merged_data %>%
ggplot(aes(TotalSteps, Total_hours_in_bed))+
geom_point(color = "Blue")+
geom_smooth()+
facet_wrap(~TotalSleepRecords)
merged_data %>%
ggplot(aes(TotalSteps, Total_hours_in_bed))+
geom_point(color = "Blue", alpha= 0.5)+
geom_smooth()+
facet_wrap(~TotalSleepRecords)
merged_data %>%
ggplot(aes(Total_hours_asleep, Calories))+
geom_point()+
geom_smooth()+
facet_wrap(~TotalSleepRecords)
View(Daily_activity_data)
View(daily_calories_clean)
weight <- read.csv("WeightLogInfo_merged.csv")
styler:::style_selection()
styler:::set_style_transformers()
view(weight)
View(daily_activity_clean)
View(weight)
weight_clean <- weight[!duplicated(weight), ] %>%
na.omit()
View(weight_clean)
weight_clean <- weight[!duplicated(weight), ] %>%
# na.omit()
# Explore The data sets
daily_activity_clean %>%
count(Id)
weight_clean <- weight[!duplicated(weight), ] %>%
# na.omit()
# Explore The data sets
daily_activity_clean %>%
count(Id)
weight_clean <- weight[!duplicated(weight), ]
weight_clean <- weight[!duplicated(weight), ] %>%
drop_na(WeightPounds)
weight_clean <- weight[!duplicated(weight), ] %>%
drop_na(WeightPounds)
weight_clean <- weight[!duplicated(weight), ]
source("C:/Users/HENRY IRABOR/Desktop/csp2/Capstone_project_analysis2.R")
# Load packages
# install.packages("gsubfn")
library(tidyverse)
library(lubridate)
library(gsubfn)
library(ggExtra)
# Load and data
sleep_day <- read.csv("sleepDay_merged.csv")
daily_activity <- read.csv("dailyActivity_merged.csv")
daily_calories <- read.csv("dailyCalories_merged.csv")
weight <- read.csv("WeightLogInfo_merged.csv")
# View data and data structure
View(sleep_day)
# Drop duplicate and NA rows
sleep_day_clean <- sleep_day[!duplicated(sleep_day), ] %>%
na.omit()
daily_activity_clean <- daily_activity[!duplicated(daily_activity), ] %>%
na.omit()
daily_calories_clean <- daily_calories[!duplicated(daily_calories), ] %>%
na.omit()
weight_clean <- weight[!duplicated(weight), ]
# Trim sleepDay column in sleep_day dataset
sleep_day_clean$SleepDay <- gsub(
" 12:00:00 AM", "",
as.character(sleep_day_clean$SleepDay)
)
# Create Weekday variable for daily activities and sleep day
daily_activity_clean <- daily_activity_clean %>%
mutate(Weekday = weekdays
(as.Date(ActivityDate, "%m/%d/%Y")))
sleep_day_clean <- sleep_day_clean %>%
mutate(Weekday = weekdays
(as.Date(SleepDay, "%m/%d/%Y")))
daily_calories_clean <- daily_calories_clean %>%
mutate(Weekday = weekdays
(as.Date(ActivityDay, "%m/%d/%Y")))
# Create Weekday variable for daily activities and sleep day
daily_activity_clean <- daily_activity_clean %>%
mutate(Weekday = weekdays
(as.Date(ActivityDate, "%m/%d/%Y")))
sleep_day_clean <- sleep_day_clean %>%
mutate(Weekday = weekdays
(as.Date(SleepDay, "%m/%d/%Y")))
daily_calories_clean <- daily_calories_clean %>%
mutate(Weekday = weekdays
(as.Date(ActivityDay, "%m/%d/%Y")))
# Create new variable with hours instead of minutes
updated_sleep_day <- sleep_day_clean %>%
mutate(
Total_hours_asleep = TotalMinutesAsleep / 60,
Total_hours_in_bed = TotalTimeInBed / 60
)
updated_sleep_day$Total_hours_asleep <-
round(updated_sleep_day$Total_hours_asleep, digits = 2)
# Plot calories against total steps
ggplot(
data = daily_activity_clean,
mapping = aes(x = TotalSteps, y = Calories)
) +
geom_point(aes(color = Calories)) +
geom_smooth()
# Plot Total Hours Asleep Against Weekday.
ggplot(
data = updated_sleep_day,
mapping = aes(
x = Weekday,
y = Total_hours_asleep
)
) +
geom_boxplot() +
facet_wrap(~TotalSleepRecords) +
ggExtra::rotateTextX()
updated_sleep_day %>%
ggplot(aes(Weekday, fill = Total_hours_asleep)) +
geom_bar()
daily_calories_clean %>%
ggplot(aes(Weekday, Calories, color = Calories)) +
geom_boxplot()
# Rename variables to match
Sleep_data <- updated_sleep_day %>%
rename(Date = SleepDay)
Daily_activity_data <- daily_activity_clean %>%
rename(Date = ActivityDate)
# Merge datasets
merged_data <- merge(Daily_activity_data, Sleep_data, by = c("Id", "Date"))
merged_data %>%
ggplot(aes(TotalDistance, Total_hours_asleep, color = "Blue")) +
geom_point() +
geom_smooth() +
facet_wrap(~TotalSleepRecords)
merged_data %>%
ggplot(aes(TotalSteps, Total_hours_in_bed)) +
geom_point(color = "Blue", alpha = 0.5) +
geom_smooth() +
facet_wrap(~TotalSleepRecords)
merged_data %>%
ggplot(aes(Total_hours_asleep, Calories)) +
geom_point() +
geom_smooth() +
facet_wrap(~TotalSleepRecords)
weight_clean$Date1 = str_sub(weight_clean$Date,1,8)
merged_data_conv <- merged_data %>%
rename(Date1 = Date)
#Merge second time
merged_data2 <- merge(merged_data_conv, weight_clean, by = c("Id", "Date1"))
merged_data2 %>%
ggplot(aes(TotalSteps, WeightPounds))+
geom_point()+
geom_smooth()
merged_data2 %>%
ggplot(aes(Calories, WeightPounds))+
geom_point()+
geom_smooth()
merged_data2 %>%
ggplot(aes(TotalSteps, BMI))+
geom_point()+
geom_smooth()
View(weight_clean)
# Load packages
# install.packages("gsubfn")
install.packages("rmarkdown")
source("C:/Users/HENRY IRABOR/Desktop/csp2/Capstone_project_analysis2.R")
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(lubridate)
library(gsubfn)
library(ggExtra)
# Load packages
# install.packages("gsubfn")
#install.packages("rmarkdown")
library(tidyverse)
library(lubridate)
library(gsubfn)
library(ggExtra)
# Load and data
sleep_day <- read.csv("sleepDay_merged.csv")
daily_activity <- read.csv("dailyActivity_merged.csv")
daily_calories <- read.csv("dailyCalories_merged.csv")
sapply(weight)
??sapply
weight %>% count(Id)
weight %>% count(Id)
glimpse(sleep)
glimpse(updated_sleep_day)
updated_sleep_day %>%
ggplot(aes(Weekday, fill = Total_hours_asleep)) +
geom_bar()
View(daily_activity_clean)
daily_activity_clean %>%
View(daily_activity_clean)
daily_activity_clean %>%
ggplot(aes(Weekday)) +
geom_bar()
daily_activity_clean %>%
ggplot(aes(Weekday, TotalSteps, color = Calories)) +
geom_boxplot()
styler:::set_style_transformers()
styler:::style_selection()
# Rename variables to match
Sleep_data <- updated_sleep_day %>%
rename(Date = SleepDay)
Daily_activity_data <- daily_activity_clean %>%
rename(Date = ActivityDate)
# Merge datasets
merged_data <- merge(Daily_activity_data, Sleep_data, by = c("Id", "Date"))
weight_clean$Date1 = str_sub(weight_clean$Date,1,8)
merged_data_conv <- merged_data %>%
rename(Date1 = Date)
#Merge second time
merged_data2 <- merge(merged_data_conv, weight_clean, by = c("Id", "Date1"))
merged_data2 %>%
ggplot(aes(Calories, WeightPounds))+
geom_point()+
geom_smooth()
merged_data2 %>%
ggplot(aes(TotalSteps, BMI))+
geom_point()+
geom_smooth()
merged_data2 %>%
ggplot(aes(WeightPounds, Total_hours_asleep))+
geom_point()+
geom_smooth()
source("C:/Users/HENRY IRABOR/Desktop/csp2/Capstone_project_analysis2.R")
View(daily_activity)
View(sleep_day_clean)
View(weight)
View(merged_data_conv)
source("C:/Users/HENRY IRABOR/Desktop/csp2/Capstone_project_analysis2.R")
